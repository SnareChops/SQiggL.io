import { ParserOptions, ScopedVariables } from '../parser';
import { DSL } from '../dsl';
/**
 * The parser responsible for parsing all DSLCommands
 *
 * @internal
 */
export declare class CommandParser {
    private options;
    /**
     * Creates a new instance of CommandParser.
     *
     * @internal
     * @param options {ParserOptions} - The {@link ParserOptions} for string output.
     */
    constructor(options: ParserOptions);
    /**
     * Take a DSLReplacement, run any expressions against it, and output the final string.
     *
     * @internal
     * @param dsl {DSL} - The DSL to parse (This is slightly different to the other parsers as this parser needs access to the underlying scope)
     * @param variables {ScopedVariables} - The list of all known variables for this scope.
     * @returns {string} - The final output string for this command.
     */
    parse(dsl: DSL, variables?: ScopedVariables): string;
}
