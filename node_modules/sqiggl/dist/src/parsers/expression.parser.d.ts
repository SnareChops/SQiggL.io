import { ParserOptions, ScopedVariables } from '../parser';
import { DSLExpression } from '../dsl';
import { ExpressionResult } from '../expressions';
/**
 * The parser responsible for parsing all DSLExpressions.
 *
 * @internal
 */
export declare class ExpressionParser {
    private options;
    /**
     * Creates a new instance of ExpressionParser.
     *
     * @internal
     * @param options {ParserOptions} - The {@link ParserOptions} for string output.
     */
    constructor(options: ParserOptions);
    /**
     * Take a DSLExpression and output the final string or boolean.
     *
     * @internal
     * @param dsl {DSLExpression} - The DSL to parse.
     * @param variables {ScopedVariables} - The list of known variables for this scope.
     * @returns {ExpressionResult} - A string | boolean | string[]
     */
    parse(dsl: DSLExpression, variables?: ScopedVariables): ExpressionResult;
}
